{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","App","useState","setGoods","error","setError","all","first5","red","loading","setLoading","errorMessage","loadAllGoods","a","goodsFromServer","load5Goods","sort","good1","good2","localeCompare","splice","loadRedGoods","filter","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4PAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCNX,SAASC,IACd,OAAOC,MAHI,yEAGWC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAG7C,ICHMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA8BH,mBAAS,CACrCI,KAAK,EACLC,QAAQ,EACRC,KAAK,IAHP,mBAAOC,EAAP,KAAgBC,EAAhB,KAKMC,EAAe,eAEfC,EAAY,uCAAG,4BAAAC,EAAA,6DACnBH,EAAW,2BAAKD,GAAN,IAAeH,KAAK,KAC9BD,EAAS,IAFU,kBAIaT,IAJb,OAIXkB,EAJW,OAMjBX,EAASW,GANQ,gDAQjBT,EAASM,GARQ,QAWnBD,EAAW,2BAAKD,GAAN,IAAeH,KAAK,KAXX,yDAAH,qDAcZS,EAAU,uCAAG,4BAAAF,EAAA,6DACjBH,EAAW,2BAAKD,GAAN,IAAeF,QAAQ,KACjCF,EAAS,IAFQ,kBDpBZT,IAASE,MAAK,SAACT,GACpB,OAAOA,EACJ2B,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMvB,KAAKyB,cAAcD,EAAMxB,SACtD0B,OAAO,EAAG,MCiBI,OAKTN,EALS,OAOfX,EAASW,GAPM,gDASfT,EAASM,GATM,QAYjBD,EAAW,2BAAKD,GAAN,IAAeF,QAAQ,KAZhB,yDAAH,qDAeVc,EAAY,uCAAG,4BAAAR,EAAA,6DACnBH,EAAW,2BAAKD,GAAN,IAAeD,KAAK,KAC9BH,EAAS,IAFU,kBD3BdT,IAASE,MAAK,SAACT,GAAD,OAAWA,EAAMiC,QAAO,SAAC/B,GAAD,MAAyB,QAAfA,EAAKE,YC2BvC,OAKXqB,EALW,OAOjBX,EAASW,GAPQ,gDASjBT,EAASM,GATQ,QAYnBD,EAAW,2BAAKD,GAAN,IAAeD,KAAK,KAZX,yDAAH,qDAelB,OACE,sBAAKe,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASb,EAHX,SAKIH,EAAQH,IAAyB,aAAnB,mBAGlB,wBACEkB,KAAK,SACL,UAAQ,oBACRC,QAASV,EAHX,SAKIN,EAAQF,OAAgC,aAAvB,uBAGrB,wBACEiB,KAAK,SACL,UAAQ,aACRC,QAASJ,EAHX,SAKIZ,EAAQD,IAAyB,aAAnB,mBAGhBJ,EAGA,oBAAIZ,MAAO,CAAEC,MAAO,OAApB,0BAFA,cAAC,EAAD,CAAWJ,MAAOA,QCtF1BqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2bd21291.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL).then((response) => response.json());\n}\n\nexport const get5First = () => {\n  return getAll().then((goods) => {\n    return goods\n      .sort((good1, good2) => good1.name.localeCompare(good2.name))\n      .splice(0, 5);\n  });\n};\n\nexport const getRedGoods = () => {\n  return getAll().then((goods) => goods.filter((good) => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState({\n    all: false,\n    first5: false,\n    red: false,\n  });\n  const errorMessage = 'No goods yet';\n\n  const loadAllGoods = async () => {\n    setLoading({ ...loading, all: true });\n    setError('');\n    try {\n      const goodsFromServer = await getAll();\n\n      setGoods(goodsFromServer);\n    } catch {\n      setError(errorMessage);\n    }\n\n    setLoading({ ...loading, all: false });\n  };\n\n  const load5Goods = async () => {\n    setLoading({ ...loading, first5: true });\n    setError('');\n\n    try {\n      const goodsFromServer = await get5First();\n\n      setGoods(goodsFromServer);\n    } catch {\n      setError(errorMessage);\n    }\n\n    setLoading({ ...loading, first5: false });\n  };\n\n  const loadRedGoods = async () => {\n    setLoading({ ...loading, red: true });\n    setError('');\n\n    try {\n      const goodsFromServer = await getRedGoods();\n\n      setGoods(goodsFromServer);\n    } catch {\n      setError(errorMessage);\n    }\n\n    setLoading({ ...loading, red: false });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={loadAllGoods}\n      >\n        {!loading.all ? 'Load all goods' : 'loadind...'}\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={load5Goods}\n      >\n        {!loading.first5 ? 'Load 5 first goods' : 'loadind...'}\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={loadRedGoods}\n      >\n        {!loading.red ? 'Load red goods' : 'loadind...'}\n      </button>\n\n      {!error ? (\n        <GoodsList goods={goods} />\n      ) : (\n        <h2 style={{ color: 'red' }}>No goods yet</h2>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}